install.packages("sm")
boxplot(bike_buyers$Income ~ bike_buyers$Education)
bike_buyers = read.csv("./bike_buyers.csv", fileEncoding="UTF-8-BOM")
#general stats
str(bike_buyers)
#variable stats, like mean, median
summary(bike_buyers)
class(bike_buyers)
head(bike_buyers)
library(dplyr)
bike_buyers = select(bike_buyers, -ID)
bought = filter(bike_buyers, Purchased.Bike == "Yes")
nrow(bought)
#univariate analysis
#single variable stats
#multi-variate analysis
#numeric compared to factor variable
by(bike_buyers$Income, bike_buyers$Education, summary)
bike_buyers = read.csv("./bike_buyers.csv", fileEncoding="UTF-8-BOM")
setwd("D:/Random/Code/R_codes")
bike_buyers = read.csv("./bike_buyers.csv", fileEncoding="UTF-8-BOM")
#general stats
str(bike_buyers)
#variable stats, like mean, median
summary(bike_buyers)
class(bike_buyers)
head(bike_buyers)
bike_buyers = select(bike_buyers, -ID)
bought = filter(bike_buyers, Purchased.Bike == "Yes")
nrow(bought)
#univariate analysis
#single variable stats
#multi-variate analysis
#numeric compared to factor variable
by(bike_buyers$Income, bike_buyers$Education, summary)
boxplot(bike_buyers$Income ~ bike_buyers$Education)
library(sm)
sm.density.compare(bike_buyers$Income, bike_buyers$Education)
#bought a bike vs education (categorical to categorical)
?xtabs
#bought a bike vs education (categorical to categorical)
xtabs(~Education+Purchased.Bike, bike_buyers)
plot(xtabs(~Education+Purchased.Bike, bike_buyers))
xtabs(~Occupation+Purchased.Bike, bike_buyers)
plot(xtabs(~Occupation+Purchased.Bike, bike_buyers))
library(gmodels)
install.packages("gmodels")
library(gmodels)
CrossTable(bike_buyers$Education, bike_buyers$Purchased.Bike, chisq = TRUE, prop.t = F)
CrossTable(bike_buyers$Occupation, bike_buyers$Purchased.Bike, chisq = TRUE, prop.t = F)
#continuous vs continuous
scatter.smooth(bike_buyers$Age, bike_buyers$Income)
?select
?case_when
?ungroup
install.packages("DataExplorer")
install.packages("SmartEDA")
install.packages("dlookr")
dlookr::diagnose_report(mtcars)
setwd("D:/UE Applied Sciences/Semester I/DS&B/Project/code")
# Read gold prices data
gold_df <- read.csv('../data/gold_prices_monthly.csv')
library(ggplot2)
library(comtradr)
library(tidyverse)
library(lubridate)
library(dlookr)
options(scipen = 999)
gold_df <- read.csv('../data/gold_prices_monthly.csv')
gold_df$date <- as.Date(gold_df$date, format = '%m/%d/%Y')
gold_df$date <- format(gold_df$date,"%Y-%m-01")
gold_df$priceUSD_troyounce <- as.numeric(gsub(",", "", gold_df$priceUSD_troyounce))*32.1507
# Read multiple data files and combine
file_list <- list.files(path="./data/", full.names = TRUE)
ldf <- lapply(file_list, read.csv, row.names = NULL)
df <- do.call("rbind", ldf)
rm(ldf, file_list)
colnames(df) <- colnames(df)[2:ncol(df)]
# Read multiple data files and combine
file_list <- list.files(path="../data/export_data/", full.names = TRUE)
ldf <- lapply(file_list, read.csv, row.names = NULL)
df <- do.call("rbind", ldf)
rm(ldf, file_list)
colnames(df) <- colnames(df)[2:ncol(df)]
df <- df[1:(ncol(df)-1)]
df <- df[c("refYear", "refMonth", "reporterDesc", "partnerDesc", "cmdCode", "qtyUnitAbbr",
"qty", "altQtyUnitAbbr", "altQty", "primaryValue")]
df[df$partnerDesc == "T\xfcrkiye",]$partnerDesc <- 'Turkey'
View(df)
unique(df$qtyUnitAbbr)
unique(df$altQtyUnitAbbr)
df[df$qtyUnitAbbr == "N/A",]$qtyUnitAbbr <- NA
df[df$altQtyUnitAbbr == "N/A",]$altQtyUnitAbbr <- NA
df[df$qty == 0,]$qty <- NA
df[df$altQty == 0,]$altQty <- NA
str(df)
brics <- c("China, Hong Kong SAR", "China", "South Africa", "India", "Russia", "Brazil")
west <- c("USA", "United Kingdom", "Spain", "France", "Germany", "Turkey", "Italy", "Japan",
"Rep. of Korea", "Switzerland", "Canada", "Cyprus", "Slovenia")
df$bricsflag <- NA
df[df$partnerDesc %in% brics,]$bricsflag <- 'b'
df[df$partnerDesc %in% west,]$bricsflag <- 'w'
# handle date column and subset the gold prices df for the years 2017-2023
df$date <- as.Date(paste('01', df$refMonth, df$refYear, sep = '/'), format = "%d/%m/%Y")
gold_df <- gold_df[gold_df$date >= min(df$date) & gold_df$date <= max(df$date),]
df$refYear <- NULL
df$refMonth <- NULL
df$gold_price <- sapply(df$date, function(x) gold_df[gold_df$date == x,]$priceUSD_troyounce)
#**
df <- df[df$partnerDesc != 'World',]
View(df)
?dlookr::diagnose_paged_report
dlookr::diagnose_paged_report(df, output_format = c("pdf"), output_file = '../output/eda_output_1.pdf')
dlookr::diagnose_report(df, output_format = c("pdf"))
SmartEDA::ExpReport(df, op_file = "smartEDA_report.html")
as.factor(df$cmdCode)
df$cmdCode <- as.factor(df$cmdCode)
SmartEDA::ExpReport(df, op_file = "smartEDA_report.html")
View(df)
write.csv(df, "../data/cleaned_monthly_export.csv", row.names = FALSE)
