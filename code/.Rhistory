plot_df[plot_df$partnerDesc %in% c('India'),]$ctyGroup <- 'India'
#plot_df[plot_df$partnerDesc %in% c('Brazil'),]$ctyGroup <- 'Brazil'
}
legTitle <- 'Country Group'
g <- ggplot(data = plot_df, aes(x = date)) +
geom_point(aes(y = gold_price), color = "#FAD510", size=2.5, alpha = 0.8) +
#geom_point(aes(y = unit_price, color = !!ifelse(Reporter == 'Kenya', sym("ctyGroup"), sym("partnerDesc"))), size=2.5, alpha = 0.8) +
geom_point(aes(y = unit_price), size=1.5, color = "#004990") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
scale_y_continuous(limits = c(0, 75000), labels = scales::label_dollar(scale_cut = scales::cut_short_scale())) +
theme_bw() +
ylab("USD/Kg") + xlab("Date") +  guides(color=guide_legend(title=legTitle)) +
labs(title = paste(Reporter, '\'s unit price vs gold spot price')) +
theme(legend.position = "top", legend.title=element_blank()) +
theme(axis.text.x = element_text(angle=45, hjust = 1)) +
guides(color = guide_legend(nrow = 1))
#g <- g + scale_color_manual(values = color_vec[1:length(unique(plot_df$ctyGroup))])
g <- g + facet_wrap( ~ ctyGroup, ncol = 3)
return(list(g, plot_df))
}
#| code-fold: true
Reporter <- 'South Africa'
plot_stats = cmdcode_unitprice_plot(df, Reporter, gold_df)
plot1 <- plot_stats[[1]]
Reporter <- 'Kenya'
plot_stats = cmdcode_unitprice_plot(df, Reporter, gold_df)
plot2 <- plot_stats[[1]]
#| echo: false
plot1
#ggsave('test.svg', plot1)
#| echo: false
plot1
#ggsave('test.svg', plot1)
#| code-fold: true
df %>% group_by(reporterDesc, partnerDesc) %>% summarise(total = sum(primaryValue))
#| code-fold: true
df %>% group_by(reporterDesc, partnerDesc) %>% summarise(total = sum(primaryValue)) %>% arrange(total)
#| code-fold: true
df %>% group_by(reporterDesc, partnerDesc) %>% summarise(total = sum(primaryValue)) %>% arrange(reporterDesc, total)
#| code-fold: true
df %>% group_by(reporterDesc, partnerDesc) %>% summarise(total = sum(primaryValue)) %>% arrange(reporterDesc, desc(total))
#| code-fold: true
gt(df %>% group_by(reporterDesc, partnerDesc) %>% summarise(total = sum(primaryValue)) %>% arrange(reporterDesc, desc(total)))
gt(df %>% group_by(reporterDesc, partnerDesc) %>% summarise(total = sum(primaryValue)) %>% arrange(reporterDesc, desc(total))) |>
cols_label(
partnerDesc = "Partner",
total = "Cumulative Value"
)
gt(df %>% group_by(reporterDesc, partnerDesc) %>% summarise(total = sum(primaryValue)) %>% arrange(reporterDesc, desc(total))) |>
cols_label(
partnerDesc = "Partner",
total = "Cumulative Value"
) |>
tab_header(
title = "Major Gold Trade partners for Kenya and South Africa"
) |>
fmt_currency(
columns = c(total),
currency = "USD",
decimals = 0
)
#| code-fold: true
gt(df %>% group_by(reporterDesc, partnerDesc) %>% summarise(total = sum(primaryValue)) %>% arrange(reporterDesc, desc(total))) |>
cols_label(
partnerDesc = "Partner",
total = "Cumulative Value"
) |>
tab_header(
title = "Major Gold Trade partners for Kenya and South Africa"
) |>
fmt_currency(
columns = c(total),
currency = "USD",
decimals = 0
)
#| code-fold: true
gt(df %>% group_by(reporterDesc, partnerDesc) %>% summarise(total = sum(primaryValue)) %>% arrange(reporterDesc, desc(total))) |>
cols_label(
partnerDesc = "Partner",
total = "Cumulative Value"
) |>
tab_header(
title = "Major Gold Trade partners for Kenya and South Africa"
) |>
fmt_currency(
columns = c(total),
currency = "USD",
decimals = 0
) |>
tab_style(
style = cell_text(weight = "bold"),
locations = cells_row_groups(groups = 1:2)
)
df %>% group_by(reporterDesc, partnerDesc) %>% summarise(total = sum(primaryValue)) %>% arrange(reporterDesc, desc(total))
df %>% group_by(reporterDesc, partnerDesc) %>% summarise(total = sum(primaryValue)) %>% arrange(reporterDesc, desc(total)) %>%
filter(total > quantile(total, .8))
df %>% group_by(reporterDesc, partnerDesc) %>% summarise(total = sum(primaryValue)) %>% arrange(reporterDesc, desc(total)) %>%
filter(total > quantile(total, .6))
df %>% group_by(reporterDesc, partnerDesc) %>% summarise(total = sum(primaryValue)) %>% arrange(reporterDesc, desc(total)) %>%
top_n(n = 10)
gt(df %>% group_by(reporterDesc, partnerDesc) %>%
summarise(total = sum(primaryValue)) %>%
arrange(reporterDesc, desc(total)) %>%
top_n(n = 10)) |>
cols_label(
partnerDesc = "Partner",
total = "Cumulative Value"
) |>
tab_header(
title = "Major Gold Trade partners for Kenya and South Africa"
) |>
fmt_currency(
columns = c(total),
currency = "USD",
decimals = 0
) |>
tab_style(
style = cell_text(weight = "bold"),
locations = cells_row_groups(groups = 1:2)
)
df %>%
group_by(reporterISO, date) %>%
summarise(total = sum(primaryValue)) %>%
pivot_wider(names_from = date, values_from = total)
df %>%
group_by(reporterDesc, date) %>%
summarise(total = sum(primaryValue)) %>%
pivot_wider(names_from = date, values_from = total)
pivoted_df <- df
pivoted_df$date <- lubridate::floor_date(pivoted_df$date, "year")
pivoted_df <- df %>%
group_by(reporterDesc, date) %>%
summarise(total = sum(primaryValue)) %>%
pivot_wider(names_from = date, values_from = total)
pivoted_df
pivoted_df <- df
pivoted_df$date <- lubridate::floor_date(pivoted_df$date, "year")
View(pivoted_df)
pivoted_df <- pivoted_df %>%
group_by(reporterDesc, date) %>%
summarise(total = sum(primaryValue)) %>%
pivot_wider(names_from = date, values_from = total)
pivoted_df
pivoted_df <- df[df$cmdCode == 7108,]
pivoted_df$date <- lubridate::floor_date(pivoted_df$date, "year")
unique(df$partnerDesc)
sort(unique(df$partnerDesc))
sort(unique(df$cmdCode))
pivoted_df <- df[df$cmdCode == 7108,]
pivoted_df$date <- lubridate::floor_date(pivoted_df$date, "year")
pivoted_df <- pivoted_df %>%
group_by(reporterDesc, date) %>%
summarise(total = sum(primaryValue)) %>%
pivot_wider(names_from = date, values_from = total)
df <- read.csv(file = "../data/all_export.csv", row.names = NULL)
colnames(df) <- colnames(df)[2:ncol(df)]
df <- df[1:(ncol(df)-1)]
df <- df[c("refYear", "reporterISO", "reporterDesc", "partnerDesc", "cmdCode",
"qtyUnitAbbr", "qty", "altQtyUnitAbbr", "altQty", "primaryValue")]
colnames(df)[1] <- "date"
df$date <- lubridate::ymd(df$date, truncated = 2L)
# cumulative change
pivoted_df <- df %>%
group_by(reporterISO, date) %>%
summarise(total = sum(primaryValue)) %>%
pivot_wider(names_from = date, values_from = total)
pivoted_df <- pivoted_df[,c(1,2,7,8,3,4,5,6)]
pivoted_df <- pivoted_df %>%
rowwise() %>%
mutate(
change_2017_2018 = (`2018-01-01` - `2017-01-01`)/ `2017-01-01`,
change_2018_2019 = (`2019-01-01` - `2018-01-01`)/ `2018-01-01`,
change_2019_2020 = (`2020-01-01` - `2019-01-01`)/ `2019-01-01`,
change_2020_2021 = (`2021-01-01` - `2020-01-01`)/ `2020-01-01`,
change_2021_2022 = (`2022-01-01` - `2021-01-01`)/ `2021-01-01`,
change_2022_2023 = (`2023-01-01` - `2022-01-01`)/ `2022-01-01`,
cumulative = (((change_2017_2018+1)*(change_2018_2019+1)*(change_2019_2020+1)*(change_2020_2021+1)*(change_2021_2022+1)*(change_2022_2023+1)) - 1)*100,
max_min_change = (`2023-01-01` - `2017-01-01`)/ `2017-01-01`
) %>%
ungroup()
subset_df <- pivoted_df %>%
filter(reporterISO == "ZAF" | reporterISO == "KEN") %>%
select(reporterISO, change_2017_2018, change_2018_2019, change_2019_2020, change_2020_2021, change_2021_2022, change_2022_2023)
subset_df <- gather(subset_df, year, value, change_2017_2018:change_2022_2023)
subset_df$year <- lubridate::ymd(gsub(".*_(\\d{4})$", "\\1", subset_df$year), truncated = 2L)
subset_df$value <- round(subset_df$value*100,2)
subset_df[subset_df$reporterISO == "ZAF", ]$reporterISO <- " South Africa"
subset_df[subset_df$reporterISO == "KEN", ]$reporterISO <- "Kenya"
View(subset_df)
View(pivoted_df)
df_i
pivoted_df <- df[df$cmdCode == 7108,]
pivoted_df$date <- lubridate::floor_date(pivoted_df$date, "year")
pivoted_df$date
unique(pivoted_df$date)
pivoted_df <- df[df$cmdCode == 7108,]
pivoted_df$date <- lubridate::floor_date(pivoted_df$date, "year")
pivoted_df <- pivoted_df %>%
group_by(reporterDesc, date) %>%
summarise(total = sum(primaryValue)) %>%
pivot_wider(names_from = date, values_from = total)
View(pivoted_df)
View(pivoted_df)
library(ggplot2)
library(tidyverse)
library(sf)
library(lubridate)
library(knitr)
library(RColorBrewer)
library(wesanderson)
library(patchwork)
library(scales)
library(gt)
library(gtExtras)
library(summarytools)
#| code-fold: true
df <- read.csv(file = "../data/all_export.csv", row.names = NULL)
colnames(df) <- colnames(df)[2:ncol(df)]
df <- df[1:(ncol(df)-1)]
df <- df[c("refYear", "reporterISO", "reporterDesc", "partnerDesc", "cmdCode",
"qtyUnitAbbr", "qty", "altQtyUnitAbbr", "altQty", "primaryValue")]
colnames(df)[1] <- "date"
df$date <- lubridate::ymd(df$date, truncated = 2L)
df <- df %>% group_by(reporterISO) %>% summarise(total = sum(primaryValue))
sf_world <- st_as_sf(rworldmap::getMap(resolution = "low")) %>% st_transform(crs = "+proj=moll") %>% dplyr::select(ISO_N3, ISO_A3)
colnames(sf_world)[2] <- "reporterISO"
test <- merge(sf_world, df, by = "reporterISO", all.x = TRUE)
#RecordLinkage::levenshteinSim(df$reporterDesc, sf_world$name)
#test$total <- rescale(test$total,newrange = c(-2,3))
worldmapg <- ggplot(data = test) +
geom_sf(color = "grey70", fill = "grey80", lwd = 0.1) +
geom_sf(aes(color = total, fill = total), lwd = 0.1, alpha = 0.9) +
scale_x_continuous(breaks = seq(-180, 180, by = 30)) +
scale_y_continuous(breaks = c(seq(-80, 80, by = 20), 85)) +
rcartocolor::scale_color_carto_c(palette = "Fall",
na.value = "transparent",
guide = F,
direction = -1
#limits = c(-2, 3)
) +
rcartocolor::scale_fill_carto_c(palette = "Fall",
na.value = "grey95",
name = NULL,
direction = -1
#limits = c(-2, 3),
#breaks = -2:3,
#labels = c("-2%", "-1%", "Â±0%", "+1%", "+2%", "\u2265 +3%")
) +
guides(fill = guide_legend(title.position = "top",
title.hjust = 0.5, nrow = 1,
label.position = "top")) +
labs(x = NULL, y = NULL,
title = "Gold Export Value over 2017 - 2023",
subtitle = "total gold export value in USD",
caption = "Data by United Nations ")
#| code-fold: true
ydf <- read.csv('../data/yearly_cleaned_export.csv')
ydf$date <- lubridate::ymd(ydf$date, truncated = 2L)
ydf$flow <- "Export Reported"
ydf2 <- read.csv('../data/yearly_cleaned_import.csv')
ydf2$date <- lubridate::ymd(ydf2$date, truncated = 2L)
ydf2$flow <- "Import Reported"
ydf <- rbind(ydf, ydf2)
rm(ydf2)
#export monthly reported data
df <- read.csv("../data/monthly_cleaned_export.csv")
df$date <- as.Date(df$date)
#import monthly reported data
df_i <- read.csv("../data/monthly_cleaned_import.csv")
df_i$date <- as.Date(df_i$date)
# gold data
gold_df <- read.csv('../data/gold_prices_monthly.csv')
gold_df$date <- as.Date(gold_df$date, format = '%m/%d/%Y')
gold_df$date <- format(gold_df$date,"%Y-%m-01")
gold_df$priceUSD_troyounce <- as.numeric(gsub(",", "", gold_df$priceUSD_troyounce))*32.1507
#| code-fold: true
r1 <- df[df$cmdCode == 7108 & df$partnerDesc != 'World',] %>%
group_by(reporterDesc, partnerDesc) %>%
summarise(total_pvalue = sum(primaryValue), total_qty = sum(altQty))
r2 <- ydf[ydf$cmdCode == 7108 & ydf$partnerDesc != 'World' & ydf$flow == "Export Reported",] %>%
group_by(reporterDesc, partnerDesc) %>%
summarise(total_pvalue = sum(primaryValue), total_qty = sum(altQty))
percent_diff <- function(old_value, new_value) {
round(((new_value - old_value) / old_value),2)
}
t0 <- inner_join(r1, r2, by = c("partnerDesc", "reporterDesc")) %>%
select(reporterDesc, partnerDesc,
total_pvalue.x, total_pvalue.y,
total_qty.x, total_qty.y) %>%
mutate(Perc_diffpval = percent_diff(total_pvalue.x, total_pvalue.y),
Perc_diffqty = percent_diff(total_qty.x, total_qty.y)) %>%
rename(Reporter = reporterDesc, Partner = partnerDesc) %>%
select(Reporter, Partner, total_pvalue.x, total_pvalue.y, Perc_diffpval,
total_qty.x, total_qty.y, Perc_diffqty)
tab <-
gt(t0) |>
tab_header(
title = "Monthly vs Yearly Aggregated Data"
) |>
fmt_percent(
columns = c(Perc_diffpval, Perc_diffqty),
decimals = 2
) |>
fmt_currency(
columns = c(total_pvalue.x, total_pvalue.y),
currency = "USD",
decimals = 0
) |>
fmt_number(
columns = c(total_qty.x, total_qty.y),
decimals = 0
) |>
data_color(
columns = c(Perc_diffpval, Perc_diffqty),
fn = \(v) lapply(v, \(x) if (is.na(x)) "grey" else if (x < 0) "darkred" else if (x > 0) "darkgreen" else "grey"),
apply_to = "text"
) |>
cols_label(
total_pvalue.x = "Monthly Value",
total_pvalue.y = "Yearly Value",
Perc_diffpval = "Difference Value (%)",
total_qty.x = "Monthly Quantity",
total_qty.y = "Yearly Quantity",
Perc_diffqty = "Difference Qty (%)"
) |>
tab_style(
style = cell_text(weight = "bold"),
locations = cells_row_groups(groups = 1:2)
)
tab
cty_missing <- unique(r2$partnerDesc[! r2$partnerDesc %in% r1$partnerDesc])
#| code-fold: true
# replace southafrica export rep data with import rep data
nrow(df[df$reporterDesc == "South Africa",])
nrow(df_i[df_i$reporterDesc == "South Africa",])
df <- subset(df, df$reporterDesc !='South Africa')
df <- rbind(df, df_i[df_i$reporterDesc == "South Africa",])
df$qtyTransform <-df$altQty/df$qty
df$unit_price <- df$primaryValue/df$altQty
#| code-fold: true
gt(df %>% group_by(reporterDesc, partnerDesc) %>%
summarise(total = sum(primaryValue)) %>%
arrange(reporterDesc, desc(total)) %>%
top_n(n = 10)) |>
cols_label(
partnerDesc = "Partner",
total = "Cumulative Value"
) |>
tab_header(
title = "Major Gold Trade partners for Kenya and South Africa"
) |>
fmt_currency(
columns = c(total),
currency = "USD",
decimals = 0
) |>
tab_style(
style = cell_text(weight = "bold"),
locations = cells_row_groups(groups = 1:2)
)
#| code-fold: true
west <- c("USA", "United Kingdom", "Spain", "France", "Germany", "Turkey", "Italy", "Japan",
"Rep. of Korea", "Switzerland", "Canada", "Cyprus", "Slovenia", "Poland", "Ireland",
"Norway", "Austria", "New Zealand", "Luxembourg", "Slovakia", "Estonia", "Denmark",
"Netherlands", "Belgium", "Sweden", "Czechia", "Australia", "Israel")
africa <- c("Cameroon", "Dem. Rep. of the Congo", "Nigeria", "South Africa", "Ethiopia",
"Eswatini", "Mozambique", "United Rep. of Tanzania", "Botswana", "Kenya",
"Uganda", "Namibia", "Zambia", "Mauritius", "Rwanda", "")
ME <- c("United Arab Emirates", "Qatar", "Bahrain", "Saudi Arabia", "Oman")
SE_asia <- c("Indonesia", "Thailand", "Malaysia", "Singapore")
brics <- c("China, Hong Kong SAR", "China, Macao SAR", "Brazil", "India", "China", "Russia")
color_vec <- c("firebrick3", "#00A08A", "#F98400", "#5BBCD6", "#C6CDF7", "#000000", "#CDC08C", "#004990", "#FF0000", "#35274A")
cmdcode_unitprice_plot = function(df, Reporter){
plot_df <- df[df$reporterDesc == Reporter & df$cmdCode == '7108',]
plot_df$ctyGroup <- "Others"
plot_df[plot_df$partnerDesc %in% africa,]$ctyGroup <- 'Africa'
plot_df[plot_df$partnerDesc %in% west,]$ctyGroup <- 'West'
plot_df[plot_df$partnerDesc %in% c('China', 'China, Hong Kong SAR', 'China, Macao SAR'),]$ctyGroup <- 'China'
plot_df[plot_df$partnerDesc %in% ME,]$ctyGroup <- 'ME'
if(Reporter != 'Kenya'){
plot_df[plot_df$partnerDesc %in% c('India'),]$ctyGroup <- 'India'
#plot_df[plot_df$partnerDesc %in% c('Brazil'),]$ctyGroup <- 'Brazil'
}
legTitle <- 'Country Group'
g <- ggplot(data = plot_df, aes(x = date)) +
geom_point(aes(y = gold_price), color = "#FAD510", size=2.5, alpha = 0.8) +
#geom_point(aes(y = unit_price, color = !!ifelse(Reporter == 'Kenya', sym("ctyGroup"), sym("partnerDesc"))), size=2.5, alpha = 0.8) +
geom_point(aes(y = unit_price), size=1.5, color = "#004990") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
scale_y_continuous(limits = c(0, 75000), labels = scales::label_dollar(scale_cut = scales::cut_short_scale())) +
theme_bw() +
ylab("USD/Kg") + xlab("Date") +  guides(color=guide_legend(title=legTitle)) +
labs(title = paste(Reporter, '\'s unit price vs gold spot price')) +
theme(legend.position = "top", legend.title=element_blank()) +
theme(axis.text.x = element_text(angle=45, hjust = 1)) +
guides(color = guide_legend(nrow = 1))
#g <- g + scale_color_manual(values = color_vec[1:length(unique(plot_df$ctyGroup))])
g <- g + facet_wrap( ~ ctyGroup, ncol = 3)
return(list(g, plot_df))
}
#| code-fold: true
Reporter <- 'South Africa'
plot_stats = cmdcode_unitprice_plot(df, Reporter)
plot1 <- plot_stats[[1]]
Reporter <- 'Kenya'
plot_stats = cmdcode_unitprice_plot(df, Reporter)
plot2 <- plot_stats[[1]]
#| echo: false
plot1
#ggsave('test.svg', plot1)
#| echo: false
plot2
#| code-fold: true
temp <- data.frame(do.call(rbind, strsplit(as.character(df$unit_price), '\\.')))
temp$altQtyUnitAbbr <- df$altQtyUnitAbbr
# handle grams
#df[which(nchar(temp$X1) == 2),]
df[which(nchar(temp$X1) == 2 & temp$altQtyUnitAbbr == 'g'),]$altQty <-
df[which(nchar(temp$X1) == 2 & temp$altQtyUnitAbbr == 'g'),]$altQty/1000
df[which(nchar(temp$X1) == 2 & temp$altQtyUnitAbbr == 'g'),]$unit_price <-
df[which(nchar(temp$X1) == 2 & temp$altQtyUnitAbbr == 'g'),]$unit_price*1000
# handle milligrams
df[which(temp$X1 == '0' & substr(temp$X2, start = 1, stop = 1) == '0'),]$altQty <-
df[which(temp$X1 == '0' & substr(temp$X2, start = 1, stop = 1) == '0'),]$altQty/1000000
df[which(temp$X1 == '0' & substr(temp$X2, start = 1, stop = 1) == '0'),]$unit_price <-
df[which(temp$X1 == '0' & substr(temp$X2, start = 1, stop = 1) == '0'),]$unit_price*1000000
# convert grams to kg
#df[df$altQtyUnitAbbr == 'g',]$altQty <- df[df$altQtyUnitAbbr == 'g',]$altQty/1000
#df$unit_price <- df$primaryValue/df$altQty
# find the difference between gold spot price and unit price
df$gdiff <- df$gold_price - df$unit_price
#| code-fold: true
Reporter <- 'South Africa'
plot_stats = cmdcode_unitprice_plot(df, Reporter)
plot1 <- plot_stats[[1]]
Reporter <- 'Kenya'
plot_stats = cmdcode_unitprice_plot(df, Reporter)
plot2 <- plot_stats[[1]]
#| echo: false
plot1
#| echo: false
plot2
#| code-fold: true
pivoted_df <- df[df$cmdCode == 7108,]
pivoted_df$date <- lubridate::floor_date(pivoted_df$date, "year")
pivoted_df <- pivoted_df %>%
group_by(reporterDesc, date) %>%
summarise(total = sum(primaryValue)) %>%
pivot_wider(names_from = date, values_from = total)
View(pivoted_df)
#| code-fold: true
pivoted_df <- df[df$cmdCode == 7108,]
pivoted_df$date <- lubridate::floor_date(pivoted_df$date, "year")
pivoted_df %>%
group_by(reporterDesc, date) %>%
summarise(total = sum(primaryValue))
pivoted_df %>% filter(reporterDesc = "South Africa") %>% group_by(partnerDesc, date) %>% summarise(total = sum(primaryValue))
pivoted_df %>% filter(reporterDesc == "South Africa") %>% group_by(partnerDesc, date) %>% summarise(total = sum(primaryValue))
pivoted_df %>% filter(reporterDesc == "South Africa") %>% group_by(partnerDesc, date) %>% summarise(total = sum(primaryValue)) %>% print(n=200)
View(df)
#| code-fold: true
pivoted_df <- df[df$cmdCode == 7108,]
pivoted_df$date <- lubridate::floor_date(pivoted_df$date, "year")
pivoted_df %>% filter(reporterDesc == "South Africa" & partnerDesc == "United Arab Emirates") %>% group_by(date) %>% summarise(total = sum(primaryValue)) %>% print(n=200)
pivoted_df %>% filter(reporterDesc == "South Africa" & partnerDesc == "India") %>% group_by(date) %>% summarise(total = sum(primaryValue)) %>% print(n=200)
pivoted_df %>% filter(reporterDesc == "South Africa" & partnerDesc == "China") %>% group_by(date) %>% summarise(total = sum(primaryValue)) %>% print(n=200)
df <- read.csv(file = "../data/all_export.csv", row.names = NULL)
colnames(df) <- colnames(df)[2:ncol(df)]
df <- df[1:(ncol(df)-1)]
df <- df[c("refYear", "reporterISO", "reporterDesc", "partnerDesc", "cmdCode",
"qtyUnitAbbr", "qty", "altQtyUnitAbbr", "altQty", "primaryValue")]
colnames(df)[1] <- "date"
df$date <- lubridate::ymd(df$date, truncated = 2L)
# cumulative change
pivoted_df <- df %>%
group_by(reporterISO, date) %>%
summarise(total = sum(primaryValue)) %>%
pivot_wider(names_from = date, values_from = total)
pivoted_df <- pivoted_df[,c(1,2,7,8,3,4,5,6)]
pivoted_df <- pivoted_df %>%
rowwise() %>%
mutate(
change_2017_2018 = (`2018-01-01` - `2017-01-01`)/ `2017-01-01`,
change_2018_2019 = (`2019-01-01` - `2018-01-01`)/ `2018-01-01`,
change_2019_2020 = (`2020-01-01` - `2019-01-01`)/ `2019-01-01`,
change_2020_2021 = (`2021-01-01` - `2020-01-01`)/ `2020-01-01`,
change_2021_2022 = (`2022-01-01` - `2021-01-01`)/ `2021-01-01`,
change_2022_2023 = (`2023-01-01` - `2022-01-01`)/ `2022-01-01`,
cumulative = (((change_2017_2018+1)*(change_2018_2019+1)*(change_2019_2020+1)*(change_2020_2021+1)*(change_2021_2022+1)*(change_2022_2023+1)) - 1)*100,
max_min_change = (`2023-01-01` - `2017-01-01`)/ `2017-01-01`
) %>%
ungroup()
subset_df <- pivoted_df %>%
filter(reporterISO == "ZAF" | reporterISO == "KEN") %>%
select(reporterISO, change_2017_2018, change_2018_2019, change_2019_2020, change_2020_2021, change_2021_2022, change_2022_2023)
subset_df <- gather(subset_df, year, value, change_2017_2018:change_2022_2023)
subset_df$year <- lubridate::ymd(gsub(".*_(\\d{4})$", "\\1", subset_df$year), truncated = 2L)
subset_df$value <- round(subset_df$value*100,2)
subset_df[subset_df$reporterISO == "ZAF", ]$reporterISO <- " South Africa"
subset_df[subset_df$reporterISO == "KEN", ]$reporterISO <- "Kenya"
theme_set(theme_bw())
ggplot(subset_df, aes(x=year, y=value, fill = value > 0)) +
geom_bar(stat="identity", width = 300) +
geom_text(aes(label = ifelse(value > 0, paste0("+", value, "%"), paste0(value, "%")) ,
vjust = ifelse(value > 0, -0.5, 1.5)),
color = ifelse(subset_df$value > 0, "#004990", "firebrick2"), size = 4, fontface = "bold") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
scale_y_continuous(breaks = seq(-50, 100, by = 25), limits = c(-50, 110)) +
scale_fill_manual(values = c("TRUE" = "#004990", "FALSE" = "firebrick2"), guide = "none") +
ylab("% Change in Gold Export") +
xlab("Year") +
facet_grid( ~ reporterISO)
